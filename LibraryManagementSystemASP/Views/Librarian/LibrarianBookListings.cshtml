@{
    ViewData["Title"] = "Librarian Book Listings";
}

<html lang="en">
<head>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <style>
        .btn-custom {
            background-color: #316FA2;
            color: white;
        }

        .book-list {
            height: 500px;
            overflow-y: scroll;
        }

        .book-item {
            background-color: #002147;
            color: white;
            padding: 20px;
            margin-bottom: 10px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .reserve-btn {
            background-color: #007bff;
            color: white;
            border: none;
            padding: 10px 20px;
            cursor: pointer;
        }

            .reserve-btn:hover {
                background-color: #0056b3;
            }
    </style>
</head>
<body>
    <div class="px-5 h-100 mb-5">
        <div class="row">
            <div class="col-md-6 d-flex">
                <input type="text" id="search" class="form-control ms-2" placeholder="Search for books">
            </div>
            <div class="col-md-6 d-flex align-items-end">
                <button class="btn btn-custom ms-2">Search</button>
            </div>
        </div>
        <h2 class="mt-3">Available Books</h2>
        <div class="book-list" id="book-list">
            @foreach (var book in Model)
            {
                <div class="book-item" data-title="@book.Title" data-author="@book.Author" data-category="@book.Category" data-isbn="@book.Isbn" data-publisher="@book.Publisher" data-published-year="@book.PublishedYear" data-quantity="@book.Quantity">
                    <div>
                        <p>
                            <strong>Title:</strong> @book.Title<br>
                            <strong>Author:</strong> @book.Author<br>
                            <strong>Category:</strong> @book.Category<br>
                            <strong>ISBN:</strong> @book.Isbn
                        </p>
                    </div>
                    <div>
                        <p>
                            <strong>Publisher:</strong> @book.Publisher<br>
                            <strong>Published Year:</strong> @book.PublishedYear<br>
                            <strong>Quantity:</strong> @book.Quantity
                        </p>
                    </div>
                    <button class="reserve-btn" data-book-id="@book.BookId" data-bs-toggle="modal" data-bs-target="#confirmReservationModal">Reserve</button>
                </div>
            }
        </div>
    </div>

    <!-- Confirm Reservation Modal -->
    <div class="modal fade" id="confirmReservationModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Confirm Reservation</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    Are you sure you want to reserve this book?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-custom" id="confirmReserveButton">Yes</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">No</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Notification Modal -->
    <div class="modal fade" id="notificationModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="notificationTitle"></h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></ button>
                </div>
                <div class="modal-body" id="notificationBody"></div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-custom" data-bs-dismiss="modal">Okay</button>
                </div>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", () => {
            let selectedBookId = null;
            const confirmModal = new bootstrap.Modal(document.getElementById("confirmReservationModal"));
            const notificationModal = new bootstrap.Modal(document.getElementById("notificationModal"));

            // Open confirm reservation modal
            document.querySelectorAll(".reserve-btn").forEach(button => {
                button.addEventListener("click", () => {
                    selectedBookId = button.getAttribute("data-book-id");
                    confirmModal.show(); // Show the modal
                });
            });

            // Handle reservation confirmation
            document.getElementById("confirmReserveButton").addEventListener("click", () => {
                fetch(`/Librarian/ReserveBook/${selectedBookId}`, {
                    method: "POST"
                })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(data => {
                    document.getElementById("notificationTitle").textContent = data.title;
                    document.getElementById("notificationBody").textContent = data.message;
                    notificationModal.show(); // Show the notification modal
                    confirmModal.hide(); // Close the confirm reservation modal
                })
                .catch(error => {
                    console.error('Error:', error);
                    document.getElementById("notificationTitle").textContent = "Error";
                    document.getElementById("notificationBody").textContent = "An error occurred while reserving the book.";
                    notificationModal.show(); // Show the notification modal in case of error
                    confirmModal.hide(); // Close the confirm reservation modal
                });
            });

            // Search functionality when 'Search' button is clicked or 'Enter' key is pressed
            document.getElementById('search').addEventListener('keypress', function(event) {
                if (event.key === 'Enter') {
                    filterBooks();
                }
            });

            document.querySelector('.btn-custom').addEventListener('click', function() {
                filterBooks();
            });

            function filterBooks() {
                var searchValue = document.getElementById('search').value.toLowerCase();
                var bookItems = document.querySelectorAll('.book-item');

                bookItems.forEach(function(bookItem) {
                    var title = bookItem.getAttribute('data-title').toLowerCase();
                    var author = bookItem.getAttribute('data-author').toLowerCase();
                    var category = bookItem.getAttribute('data-category').toLowerCase();
                    var isbn = bookItem.getAttribute('data-isbn').toLowerCase();
                    var publisher = bookItem.getAttribute('data-publisher').toLowerCase();
                    var publishedYear = bookItem.getAttribute('data-published-year').toLowerCase();
                    var quantity = bookItem.getAttribute('data-quantity').toLowerCase();

                    // Check if the search value matches any of the book attributes
                    if (title.includes(searchValue) || author.includes(searchValue) || category.includes(searchValue) || isbn.includes(searchValue) || publisher.includes(searchValue) || publishedYear.includes(searchValue) || quantity.includes(searchValue)) {
                        bookItem.style.display = ''; // Show the book item
                    } else {
                        bookItem.style.display = 'none'; // Hide the book item
                    }
                });
            }
        });
    </script>
</body>
</html>