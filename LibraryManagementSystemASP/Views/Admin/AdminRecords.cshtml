@model List<LibraryManagementSystemASP.Models.RecordsViewModel>

@{
    ViewData["Title"] = "Admin Records";
}

<html>
<head>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <style>
        .table th, .table td {
            vertical-align: middle;
        }

        .btn-custom {
            background-color: #316FA2;
            color: white;
        }

        .btn-custom-delete {
            background-color: #c82333;
            color: white;
        }

        .table thead th {
            background-color: #00233D;
            color: white;
            position: sticky;
            top: 0;
            z-index: 1;
            margin-top: 0;
        }

        /* Prevent overflow and add scrollable body */
        .table-container {
            max-height: 500px; /* Adjust based on your requirement */
            overflow-y: auto;
            padding-top: 0;
        }
    </style>
</head>
<body>
    <div class="px-5 h-100 mb-5">
        <div class="row">
            <div class="col-md-6 d-flex">
                <input type="text" id="search" class="form-control ms-2" placeholder="Search records">
            </div>
            <div class="col-md-6 d-flex align-items-end">
                <button class="btn btn-custom ms-2">Search</button>
                <button class="btn btn-custom ms-2">Reservations</button>
                <button class="btn btn-custom ms-2">Borrowing</button>
            </div>
        </div>
        <h2 class="mt-3">Records</h2>
        <div class="table-container">
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th>Username</th>
                        <th>Book Title</th>
                        <th>Status</th>
                        <th>Last Updated</th>
                        <th>More Details</th>
                    </tr>
                </thead>
                <tbody id="recordTableBody">
                    @foreach (var record in Model)
                    {
                        <tr>
                            <td>@record.Username</td>
                            <td>@record.Title</td>
                            <td>@record.Status</td>
                            <td>@record.LastUpdated.ToString("g")</td>
                            <td>
                                <button class="btn btn-primary" data-toggle="modal" data-target="#detailsModal"
                                        onclick="loadDetails('@record.RecordType', @record.RecordId)">
                                    More Details
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <!-- Modal -->
    <div class="modal fade" id="detailsModal" tabindex="-1" role="dialog" aria-labelledby="detailsModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="detailsModalLabel">Record Details</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body" id="modal-body-content">
                    <!-- Details will be loaded here -->
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <script>
        function loadDetails(recordType, recordId) {
            $.ajax({
                url: '@Url.Action("GetRecordDetails", "Admin")',
                type: 'GET',
                data: { recordType: recordType, recordId: recordId },
                success: function (data) {
                    $('#modal-body-content').html(data);
                },
                error: function () {
                    $('#modal-body-content').html('<p>An error occurred while loading details.</p>');
                }
            });
        }

        // Search functionality when 'Search' button is clicked or 'Enter' key is pressed
        document.getElementById('search').addEventListener('keypress', function(event) {
            // Trigger search if Enter key is pressed
            if (event.key === 'Enter') {
                filterRecords();
            }
        });

        document.querySelector('.btn-custom').addEventListener('click', function() {
            filterRecords();
        });

        function filterRecords() {
            var searchValue = document.getElementById('search').value.toLowerCase();
            var rows = document.querySelectorAll('#recordTableBody tr');

            rows.forEach(function(row) {
                var cells = row.querySelectorAll('td');
                var matches = false;

                // Check if any cell contains the search value
                cells.forEach(function(cell) {
                    if (cell.innerText.toLowerCase().includes(searchValue)) {
                        matches = true;
                    }
                });

                // Show or hide the row based on whether it matches the search query
                row.style.display = matches ? '' : 'none';
            });
        }
    </script>
</body>
</html>